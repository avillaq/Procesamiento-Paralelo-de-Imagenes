services:
  gluster1:
    image: gluster/gluster-centos:latest
    container_name: gluster1
    hostname: gluster1
    privileged: true
    volumes:
      - gluster1-brick:/data/brick1
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - imagen-net
    command: >
      bash -c "
        glusterd &&
        sleep 15 &&
        gluster peer probe gluster2 &&
        gluster peer probe gluster3 &&
        gluster volume create gvol replica 3 gluster1:/data/brick1 gluster2:/data/brick1 gluster3:/data/brick1 force &&

        gluster volume start gvol &&
        gluster volume set gvol auth.allow '*' &&

        #gluster volume info gvol &&
        #gluster volume status gvol &&
        tail -f /var/log/glusterfs/glusterd.log
      "
  gluster2:
    image: gluster/gluster-centos:latest
    container_name: gluster2
    hostname: gluster2
    privileged: true
    volumes:
      - gluster2-brick:/data/brick1
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - imagen-net
    command: >
      bash -c "
        glusterd -N
      "

  gluster3:
    image: gluster/gluster-centos:latest
    container_name: gluster3
    hostname: gluster3
    privileged: true
    volumes:
      - gluster3-brick:/data/brick1
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - imagen-net
    command: >
      bash -c "
        glusterd -N
      "

  cliente:
    build:
      context: .
      dockerfile: cliente/Dockerfile
    container_name: cliente
    ports:
      - "8080:8080"
    privileged: true
    environment:
      - NODOS_CONOCIDOS=nodo1:50053,nodo2:50053,nodo3:50053,nodo4:50053,nodo5:50053
    depends_on:
      - gluster1
      - gluster2
      - gluster3
      - nodo1
      - nodo2
      - nodo3
      - nodo4
      - nodo5
    networks:
      - imagen-net

  nodo1:
    build:
      context: .
      dockerfile: nodos/Dockerfile
    container_name: nodo1
    ports:
      - "50052:50052"  # procesamiento
      - "50053:50053"  # bully
    environment:
      - NODO_ID=1
      - NODOS_CONOCIDOS=nodo1:50053,nodo2:50053,nodo3:50053,nodo4:50053,nodo5:50053
    networks:
      - imagen-net

  nodo2:
    build:
      context: .
      dockerfile: nodos/Dockerfile
    container_name: nodo2
    ports:
      - "50054:50052"  # procesamiento
      - "50055:50053"  # bully
    environment:
      - NODO_ID=2
      - NODOS_CONOCIDOS=nodo1:50053,nodo2:50053,nodo3:50053,nodo4:50053,nodo5:50053
    networks:
      - imagen-net

  nodo3:
    build:
      context: .
      dockerfile: nodos/Dockerfile
    container_name: nodo3
    ports:
      - "50056:50052"  # procesamiento
      - "50057:50053"  # bully
    environment:
      - NODO_ID=3
      - NODOS_CONOCIDOS=nodo1:50053,nodo2:50053,nodo3:50053,nodo4:50053,nodo5:50053
    networks:
      - imagen-net

  nodo4:
    build:
      context: .
      dockerfile: nodos/Dockerfile
    container_name: nodo4
    ports:
      - "50058:50052"  # procesamiento
      - "50059:50053"  # bully
    environment:
      - NODO_ID=4
      - NODOS_CONOCIDOS=nodo1:50053,nodo2:50053,nodo3:50053,nodo4:50053,nodo5:50053
    networks:
      - imagen-net
  
  nodo5:
    build:
      context: .
      dockerfile: nodos/Dockerfile
    container_name: nodo5
    ports:
      - "50060:50052"  # procesamiento
      - "50061:50053"  # bully
    environment:
      - NODO_ID=5
      - NODOS_CONOCIDOS=nodo1:50053,nodo2:50053,nodo3:50053,nodo4:50053,nodo5:50053
    networks:
      - imagen-net
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoreo/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - imagen-net
    depends_on:
      - nodo1
      - nodo2
      - nodo3
      - nodo4
      - nodo5

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoreo/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoreo/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - imagen-net
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:
  gluster1-brick:
    driver: local
  gluster2-brick:
    driver: local
  gluster3-brick:
    driver: local

networks:
  imagen-net:
    driver: bridge