apiVersion: v1
kind: Service
metadata:
  name: nodos-service
  namespace: imagen-processing
  labels:
    app: nodo-procesamiento
spec:
  ports:
  - port: 50052
    name: procesamiento
    protocol: TCP
  - port: 50053
    name: bully
    protocol: TCP
  selector:
    app: nodo-procesamiento
  type: ClusterIP
---
# servicios para cada nodo
apiVersion: v1
kind: Service
metadata:
  name: nodo-service-1
  namespace: imagen-processing
spec:
  ports:
  - port: 50053
    name: bully
    targetPort: 50053
  selector:
    app: nodo-procesamiento
    nodo-id: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: nodo-service-2
  namespace: imagen-processing
spec:
  ports:
  - port: 50053
    name: bully
    targetPort: 50053
  selector:
    app: nodo-procesamiento
    nodo-id: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: nodo-service-3
  namespace: imagen-processing
spec:
  ports:
  - port: 50053
    name: bully
    targetPort: 50053
  selector:
    app: nodo-procesamiento
    nodo-id: "3"
---
apiVersion: v1
kind: Service
metadata:
  name: nodo-service-4
  namespace: imagen-processing
spec:
  ports:
  - port: 50053
    name: bully
    targetPort: 50053
  selector:
    app: nodo-procesamiento
    nodo-id: "4"
---
apiVersion: v1
kind: Service
metadata:
  name: nodo-service-5
  namespace: imagen-processing
spec:
  ports:
  - port: 50053
    name: bully
    targetPort: 50053
  selector:
    app: nodo-procesamiento
    nodo-id: "5"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodo-procesamiento
  namespace: imagen-processing
spec:
  replicas: 5
  selector:
    matchLabels:
      app: nodo-procesamiento
  template:
    metadata:
      labels:
        app: nodo-procesamiento
    spec:
      containers:
      - name: nodo
        image: nodo-procesamiento:latest
        imagePullPolicy: Never  # para imagenes locales en Minikube
        ports:
        - containerPort: 50052
          name: procesamiento
        - containerPort: 50053
          name: bully
        env:
        - name: NODO_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['nodo-id']
        - name: NODOS_CONOCIDOS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: NODOS_CONOCIDOS
        - name: PROMETHEUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PROMETHEUS_ENABLED
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "pgrep -f 'python nodo.py'"
          initialDelaySeconds: 30
          periodSeconds: 10
      # id's unicos de nodo
      initContainers:
      - name: nodo-id-generador
        image: busybox
        command:
        - /bin/sh
        - -c
        - |
          POD_NAME=$(echo $HOSTNAME)
          NODE_ID=$(echo $POD_NAME | grep -o '[0-9]*$')
          if [ -z "$NODE_ID" ]; then
            NODE_ID=$((RANDOM % 1000 + 1))
          fi
          echo $NODE_ID > /shared/node-id
        volumeMounts:
        - name: shared-data
          mountPath: /shared
      volumes:
      - name: shared-data
        emptyDir: {}