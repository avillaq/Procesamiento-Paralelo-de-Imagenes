apiVersion: v1
kind: Service
metadata:
  name: glusterfs-cluster
  namespace: imagen-processing
  labels:
    app: glusterfs
spec:
  ports:
  - port: 24007
    name: glusterd
  - port: 24008
    name: management
  clusterIP: None
  selector:
    app: glusterfs
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: glusterfs
  namespace: imagen-processing
spec:
  serviceName: "glusterfs-cluster"
  replicas: 3
  selector:
    matchLabels:
      app: glusterfs
  template:
    metadata:
      labels:
        app: glusterfs
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
      - name: glusterfs
        image: gluster/gluster-centos:latest
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
        ports:
        - containerPort: 24007
          name: glusterd
        - containerPort: 24008
          name: management
        volumeMounts:
        - name: gluster-data
          mountPath: /data/brick1
        - name: gluster-etc
          mountPath: /etc/glusterfs
        - name: gluster-logs
          mountPath: /var/log/glusterfs
        - name: gluster-config
          mountPath: /var/lib/glusterd
        env:
        - name: GLUSTER_VOLUME_NAME
          value: "gvol"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
        - /bin/bash
        - -c
        - |
          glusterd
        
          sleep 10
          
          # Solo el primer pod configura el cluster
          if [ "$POD_NAME" = "glusterfs-0" ]; then
            sleep 15
            for i in 1 2; do
              until nslookup glusterfs-$i.glusterfs-cluster.imagen-processing.svc.cluster.local; do
                echo "Esperando a glusterfs-$i..."
                sleep 5
              done
            done
            
            gluster peer probe glusterfs-1.glusterfs-cluster.imagen-processing.svc.cluster.local
            gluster peer probe glusterfs-2.glusterfs-cluster.imagen-processing.svc.cluster.local
            
            gluster volume create gvol replica 3 \
              glusterfs-0.glusterfs-cluster.imagen-processing.svc.cluster.local:/data/brick1 \
              glusterfs-1.glusterfs-cluster.imagen-processing.svc.cluster.local:/data/brick1 \
              glusterfs-2.glusterfs-cluster.imagen-processing.svc.cluster.local:/data/brick1 \
              force
            
            gluster volume start gvol
            gluster volume set gvol auth.allow '*'
            
          fi

        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "gluster peer status"
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "pgrep glusterd"
          initialDelaySeconds: 30
          periodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: gluster-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: gluster-etc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: gluster-logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: gluster-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi